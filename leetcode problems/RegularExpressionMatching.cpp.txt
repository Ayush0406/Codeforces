// https://www.youtube.com/watch?v=l3hda49XcDE

class Solution {
public:
    bool isMatch(string A, string B) {
        int n = A.size();
        int m = B.size();

        vector<vector<int>> dp(n+1, vector<int>(m+1));
        dp[0][0] = 1;

        for(int i = 1; i <= m ; i++)
        {
            if(B[i-1] == '*') //the first letter can never be '*' anyways. So, you don't
            // have to worry about i-2>=0 condition.
                dp[0][i] = dp[0][i-2];
        }

        for(int i = 1; i <= n; i++)
        {
            for(int j = 1; j <= m; j++)
            {
                // cout<<i<<" "<<j<<'\n';
                if(A[i-1] == B[j-1] || B[j-1] == '.')
                    dp[i][j] = dp[i-1][j-1];
                else if(B[j-1] == '*')
                {
                    // cout<<"yesb\n";
                    dp[i][j] = dp[i][j-2];
                    if(B[j-2] == '.'|| B[j-2] == A[i-1])
                    {
                        dp[i][j] = dp[i][j] || dp[i-1][j];
                    }
                }
                else
                    dp[i][j] = 0;
            }
        }

        // for(int i = 0; i <= n ; i++)
        // {
        //     for(int j = 0; j <= m; j++)
        //     {
        //         cout<<dp[i][j]<<" ";
        //     }
        //     cout<<'\n';
        // }
        return dp[n][m];
    }
};